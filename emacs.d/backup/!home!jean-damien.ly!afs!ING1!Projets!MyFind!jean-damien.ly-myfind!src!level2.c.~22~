#include "myfind.h"

int get_expression(int argc, char *argv[], char **exp)
{
    int i = 1;
    for (; (i < argc) && (is_predicate(argv[i]) == 1); i++);
    char *s = argv[i];
    if ((i < argc) && (is_predicate(argv[i]) != -1) && (i + 1 < argc))
    {
        s = argv[i + 1];
        i++;
    }
    if (my_strcmp(s, "-name") == 0)
    {
        if (i + 1 < argc)
        {
            *exp = argv[i + 1];
            return 1;
        }
    }
    else if (my_strcmp(s, "-type") == 0)
    {
        if (i + 1 < argc)
        {
            *exp = argv[i + 1];
            return 1;
        }
    }
    else if ((my_strcmp(s, "-type") == 0) || (my_strcmp(s, "-name") == 0))
        warnx("missing argument to '%s'", argv[i]);
    return 0;
}

int check_expression(struct dirent *de, char *cur, int got, char *exp)
{
    if (got == 0)
    {
        return 1;
    }
    cur = cur;
    int ret = fnmatch(exp, de->d_name, 0);
    if (ret == 0)
        return 1;
    return 0;
}